@model DataAccessLayer.EF.RoomType

@{
    ViewBag.Title = "ModifyRoomInventory";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h2>ModifiyRoomInventory</h2>
@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>ROOM_TYPE</h4>
        <hr/>
        @Html.ValidationSummary(true, "", new {@class = "text-danger"})
        @Html.HiddenFor(model => model.Id)

        @*<div class="form-group">
                @Html.LabelFor(model => model.BaseRate, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.BaseRate, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.BaseRate, "", new { @class = "text-danger" })
                </div>
            </div>*@

        <div class="form-group">
            @Html.LabelFor(model => model.Inventory, new {@class = "control-label col-md-2"})
            <div class="col-md-10">
                @Html.EditorFor(model => model.Inventory, new {htmlAttributes = new {@class = "form-control"}})
                @Html.ValidationMessageFor(model => model.Inventory, "", new {@class = "text-danger"})
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Type, new {@class = "control-label col-md-2"})
            <div class="col-md-10">
                @Html.EnumDropDownListFor(model => model.Type, new {@class = "form-control"})
                @Html.ValidationMessageFor(model => model.Type, "", new {@class = "text-danger"})
            </div>
        </div>

        @*<div class="form-group">
                @Html.LabelFor(model => model.Ameneties, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Ameneties, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Ameneties, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Description, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Description, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.ImageUrl, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.ImageUrl, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.ImageUrl, "", new { @class = "text-danger" })
                </div>
            </div>*@

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Save" class="btn btn-default"/>
            </div>
        </div>
    </div>
}

<h1>@ViewBag.Status</h1>
<div>
    @Html.ActionLink("Back to List", "Index")
</div>